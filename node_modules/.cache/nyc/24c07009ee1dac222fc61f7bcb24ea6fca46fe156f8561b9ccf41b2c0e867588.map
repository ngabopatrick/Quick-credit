{"version":3,"sources":["signuptest.js"],"names":["chai","should","use","chaiHttp","describe","it","done","user","firstname","lastname","gender","address","email","password","request","app","post","send","end","err","res","body","be","an","have","status","property","data","a","id","patch"],"mappings":"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","file":"signuptest.js","sourceRoot":"/home/ngabonziza/Desktop/camp6/Quick-credit/tests","sourcesContent":["import app from '../server/app';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nchai.should();\nchai.use(chaiHttp);\n\ndescribe('USER SIGN UP TEST', () => {\n  it('Should create a new user', (done) => {\n    const user = {\n      firstname: 'Patrick',\n      lastname: 'Ngabonziza',\n      gender: 'Male',\n      address: 'Kigali',\n      email: 'ngabop7@gmail.com',\n      password: '12345',\n    };\n\n    chai.request(app)\n      .post('/api/v1/auth/signup')\n      .send(user)\n      .end((err, res) => {\n        res.body.should.be.an('object');\n        res.body.should.have.status(201);\n        res.body.should.have.property('status');\n        res.body.should.have.property('data');\n        res.body.data.should.be.a('array');\n        done();\n      });\n  });\n  it('should return error when firstname is empty', (done) => {\n    const user = {\n      lastname: 'Ngabonziza',\n      gender: 'Male',\n      address: 'Kigali',\n      email: 'ngabo@gmail.com',\n      password: '12345'\n    };\n    chai.request(app)\n      .post('/api/v1/auth/signup')\n      .send(user)\n      .end((err, res) => {\n        res.should.have.status(400);\n        done();\n      });\n  });\n\n  it('should return 400 when email has already taken', (done) => {\n    const user = {\n      lastname: 'Ngabonziza',\n      gender: 'Male',\n      address: 'Kigali',\n      email: 'ngabop7@gmail.com',\n      password: '12345'\n    };\n    chai.request(app)\n      .post('/api/v1/auth/signup')\n      .send(user)\n      .end((err, res) => {\n        res.should.have.status(400);\n        done();\n      });\n  });\n  it('should return error when lastname is empty', (done) => {\n    const user = {\n      firstname: 'Patrick',\n      gender: 'Male',\n      address: 'Kigali',\n      email: 'ngabo@gmail.com',\n      password: '12345'\n    };\n    chai.request(app)\n      .post('/api/v1/auth/signup')\n      .send(user)\n      .end((err, res) => {\n        res.should.have.status(400);\n        done();\n      });\n  });\n  // VERIFY USER\n  it('should return be able to verify user', (done) => {\n    const id=1;\n    const user = {\n      status: 'verified'\n    };\n    chai.request(app)\n      .patch(`/api/v1/users/${id}`)\n      .send(user)\n      .end((err, res) => {\n        res.should.have.status(200);\n        done();\n      });\n  });\n});"]}