{"version":3,"sources":["loantest.js"],"names":["chai","should","use","chaiHttp","describe","it","done","request","app","post","send","email","tenor","amount","end","err","res","have","status","body","be","an","property","patch"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,eAAKC,MAAL;AACAD,eAAKE,GAAL,CAASC,kBAAT;;AAEAC,SAAS,qBAAT,EAAgC,YAAM;AAClCC,OAAG,+BAAH,EAAoC,UAACC,IAAD,EAAU;AAC1CN,uBAAKO,OAAL,CAAaC,aAAb,EACKC,IADL,CACU,eADV,EAC2BC,IAD3B,CACgC;AACxBC,mBAAO,mBADiB;AAExBC,mBAAO,EAFiB;AAGxBC,oBAAQ;AAHgB,SADhC,EAMKC,GANL,CAMS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,gBAAIG,IAAJ,CAASlB,MAAT,CAAgBmB,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACAL,gBAAIG,IAAJ,CAASlB,MAAT,CAAgBgB,IAAhB,CAAqBK,QAArB,CAA8B,MAA9B;AACAhB;AACH,SAXL;AAYH,KAbD;AAcAD,OAAG,mDAAH,EAAwD,UAACC,IAAD,EAAU;AAC9DN,uBAAKO,OAAL,CAAaC,aAAb,EACKC,IADL,CACU,eADV,EAC2BC,IAD3B,CACgC;AACxBE,mBAAO,CADiB;AAExBC,oBAAQ;AAFgB,SADhC,EAKKC,GALL,CAKS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAZ;AACH,SARL;AASH,KAVD;;AAYAD,OAAG,0CAAH,EAA+C,UAACC,IAAD,EAAU;AACrDN,uBAAKO,OAAL,CAAaC,aAAb,EACKC,IADL,CACU,eADV,EAC2BC,IAD3B,CACgC;AACxBE,mBAAO,CADiB;AAExBC,oBAAQ;AAFgB,SADhC,EAKKC,GALL,CAKS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAZ;AACH,SARL;AASH,KAVD;AAWAD,OAAG,0CAAH,EAA+C,UAACC,IAAD,EAAU;AACrDN,uBAAKO,OAAL,CAAaC,aAAb,EACKC,IADL,CACU,eADV,EAC2BC,IAD3B,CACgC;AACxBC,mBAAO,iBADiB;AAExBE,oBAAQ;AAFgB,SADhC,EAKKC,GALL,CAKS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAZ;AACH,SARL;AASH,KAVD;;AAYAD,OAAG,2CAAH,EAAgD,UAACC,IAAD,EAAU;AACtDN,uBAAKO,OAAL,CAAaC,aAAb,EACKC,IADL,CACU,eADV,EAC2BC,IAD3B,CACgC;AACxBC,mBAAO,iBADiB;AAExBC,mBAAO;AAFiB,SADhC,EAKKE,GALL,CAKS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAZ;AACH,SARL;AASH,KAVD;AAWAD,OAAG,yBAAH,EAA8B,UAACC,IAAD,EAAU;AACpCN,uBAAKO,OAAL,CAAaC,aAAb,EACKe,KADL,CACW,iBADX,EAC8Bb,IAD9B,CACmC,EADnC,EAIKI,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,gBAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAZ;AACH,SAPL;AASH,KAVD;AAWH,CAxED","file":"loantest.js","sourceRoot":"/home/ngabonziza/Desktop/camp6/Quick-credit/tests","sourcesContent":["import app from '../server/app';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nchai.should();\nchai.use(chaiHttp);\n\ndescribe('TEST APPLY FOR LOAN', () => {\n    it('should be able apply for loan', (done) => {\n        chai.request(app)\n            .post('/api/v1/loans').send({\n                email: 'ngabop7@gmail.com',\n                tenor: 10,\n                amount: 50000,\n            })\n            .end((err, res) => {\n                res.should.have.status(201);\n                res.body.should.be.an('object');\n                res.body.should.have.property('data');\n                done();\n            });\n    });\n    it('should throw error when the  email does not exist', (done) => {\n        chai.request(app)\n            .post('/api/v1/loans').send({\n                tenor: 5,\n                amount: 230000,\n            })\n            .end((err, res) => {\n                res.should.have.status(400);\n                done();\n            });\n    });\n\n    it('should throw error when entered no email', (done) => {\n        chai.request(app)\n            .post('/api/v1/loans').send({\n                tenor: 8,\n                amount: 120000,\n            })\n            .end((err, res) => {\n                res.should.have.status(400);\n                done();\n            });\n    });\n    it('should throw error when no tenor entered', (done) => {\n        chai.request(app)\n            .post('/api/v1/loans').send({\n                email: 'admin@gmail.com',\n                amount: 50000,\n            })\n            .end((err, res) => {\n                res.should.have.status(400);\n                done();\n            });\n    });\n\n    it('should throw error when no amount entered', (done) => {\n        chai.request(app)\n            .post('/api/v1/loans').send({\n                email: 'admin@gmail.com',\n                tenor: 12,\n            })\n            .end((err, res) => {\n                res.should.have.status(400);\n                done();\n            });\n    });\n    it('should return all loans', (done) => {\n        chai.request(app)\n            .patch('/api/v1/loans/1').send({\n               \n            })\n            .end((err, res) => {\n                res.should.have.status(200);\n                done();\n            });\n           \n    });\n});"]}