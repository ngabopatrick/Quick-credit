{"version":3,"sources":["repaidLoans.js"],"names":["LoanController","req","res","Object","keys","query","length","status","json","data","loans","message","repaidLoans","filter","loan","repaid","toString","unrepaidLoans","loanController"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,c;;;;;;;oCACcC,G,EAAKC,G,EAAK;AACtB;AACA,UAAIC,OAAOC,IAAP,CAAYH,IAAII,KAAhB,EAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,eAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAQ,GADkB;AAE1BE,gBAAMC,gBAFoB;AAG1BC,mBAAS;AAHiB,SAArB,CAAP;AAKD;AACD;AACA,UAAMC,cAAcF,iBAAMG,MAAN,CAAa;AAAA,eAAQC,KAAKP,MAAL,KAAgBN,IAAII,KAAJ,CAAUE,MAA1B,IAAoCO,KAAKC,MAAL,CAAYC,QAAZ,OAA2Bf,IAAII,KAAJ,CAAUU,MAAjF;AAAA,OAAb,CAApB;AACA,UAAId,IAAII,KAAJ,CAAUE,MAAV,KAAqB,UAArB,IAAmCN,IAAII,KAAJ,CAAUU,MAAV,KAAqB,MAA5D,EAAoE;AAClE,eAAOb,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAQ,GADkB;AAE1BE,gBAAMG,WAFoB;AAG1BD,mBAAS;AAHiB,SAArB,CAAP;AAKD;AACD;AACA,UAAMM,gBAAgBP,iBAAMG,MAAN,CAAa;AAAA,eAAQC,KAAKP,MAAL,KAAgBN,IAAII,KAAJ,CAAUE,MAA1B,IAAoCO,KAAKC,MAAL,CAAYC,QAAZ,OAA2Bf,IAAII,KAAJ,CAAUU,MAAjF;AAAA,OAAb,CAAtB;AACA,UAAId,IAAII,KAAJ,CAAUE,MAAV,KAAqB,UAArB,IAAmCN,IAAII,KAAJ,CAAUU,MAAV,KAAqB,OAA5D,EAAqE;AACnE,eAAOb,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAQ,GADkB;AAE1BE,gBAAMQ,aAFoB;AAG1BN,mBAAS;AAHiB,SAArB,CAAP;AAKD;AACF;;;;;;AAEP,IAAMO,iBAAiB,IAAIlB,cAAJ,EAAvB;kBACekB,c","file":"repaidLoans.js","sourceRoot":"/home/ngabonziza/Desktop/camp6/Quick-credit/server/controllers/loan","sourcesContent":["import loans from '../../models/loanDb';\n\nclass LoanController {\n    getCurrentLoans(req, res) {\n        // Get all Loans\n        if (Object.keys(req.query).length === 0) {\n          return res.status(200).json({\n            status: 200,\n            data: loans,\n            message: 'All the loans',\n          });\n        }\n        // Get all repaid loans\n        const repaidLoans = loans.filter(loan => loan.status === req.query.status && loan.repaid.toString() === req.query.repaid);\n        if (req.query.status === 'approved' && req.query.repaid === 'true') {\n          return res.status(200).json({\n            status: 200,\n            data: repaidLoans,\n            message: 'All fully repaid loans',\n          });\n        }\n        // Get all current loans not fully repaid\n        const unrepaidLoans = loans.filter(loan => loan.status === req.query.status && loan.repaid.toString() === req.query.repaid);\n        if (req.query.status === 'approved' && req.query.repaid === 'false') {\n          return res.status(200).json({\n            status: 200,\n            data: unrepaidLoans,\n            message: 'All current loans not fully repaid',\n          });\n        }\n      }\n}\nconst loanController = new LoanController();\nexport default loanController;"]}